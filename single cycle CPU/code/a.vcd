$date
	Tue Nov 19 20:09:45 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module TestBench $end
$var reg 1 ! Clk $end
$var reg 1 " Reset $end
$var reg 1 # Start $end
$var integer 32 $ counter [31:0] $end
$var integer 32 % i [31:0] $end
$var integer 32 & outfile [31:0] $end
$scope module CPU $end
$var wire 1 ! clk_i $end
$var wire 1 " rst_i $end
$var wire 1 # start_i $end
$var wire 1 ' zero $end
$var wire 32 ( inst_addr [31:0] $end
$var wire 32 ) inst [31:0] $end
$scope module ALU $end
$var wire 32 * data_o [31:0] $end
$var wire 1 ' zero_o $end
$var wire 32 + data2_i [31:0] $end
$var wire 32 , data1_i [31:0] $end
$var wire 3 - ALUCtrl_i [2:0] $end
$var reg 32 . data_reg [31:0] $end
$upscope $end
$scope module ALU_Control $end
$var wire 3 / ALUCtrl_o [2:0] $end
$var wire 32 0 inst_i [31:0] $end
$var wire 2 1 ALUOp_i [1:0] $end
$var reg 3 2 ALUCtrl_reg [2:0] $end
$upscope $end
$scope module Add_PC $end
$var wire 32 3 data2_i [31:0] $end
$var wire 32 4 data_o [31:0] $end
$var wire 32 5 data1_i [31:0] $end
$upscope $end
$scope module Control $end
$var wire 7 6 Op_i [6:0] $end
$var wire 1 7 RegWrite_o $end
$var wire 1 8 ALUSrc_o $end
$var wire 2 9 ALUOp_o [1:0] $end
$upscope $end
$scope module Instruction_Memory $end
$var wire 32 : instr_o [31:0] $end
$var wire 32 ; addr_i [31:0] $end
$upscope $end
$scope module MUX_ALUSrc $end
$var wire 1 8 select_i $end
$var wire 32 < data_o [31:0] $end
$var wire 32 = data2_i [31:0] $end
$var wire 32 > data1_i [31:0] $end
$upscope $end
$scope module PC $end
$var wire 1 ! clk_i $end
$var wire 32 ? pc_i [31:0] $end
$var wire 1 " rst_i $end
$var wire 1 # start_i $end
$var reg 32 @ pc_o [31:0] $end
$upscope $end
$scope module Registers $end
$var wire 5 A RDaddr_i [4:0] $end
$var wire 32 B RDdata_i [31:0] $end
$var wire 5 C RS1addr_i [4:0] $end
$var wire 32 D RS1data_o [31:0] $end
$var wire 5 E RS2addr_i [4:0] $end
$var wire 32 F RS2data_o [31:0] $end
$var wire 1 7 RegWrite_i $end
$var wire 1 ! clk_i $end
$upscope $end
$scope module Sign_Extend $end
$var wire 32 G inst_i [31:0] $end
$var wire 32 H imm_o [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 H
b10000110011 G
b0 F
b0 E
b0 D
b0 C
b0 B
b1000 A
b0 @
b100 ?
b0 >
b0 =
b0 <
b0 ;
b10000110011 :
b1 9
08
17
b110011 6
b0 5
b100 4
b100 3
b1 2
b1 1
b10000110011 0
b1 /
b0 .
b1 -
b0 ,
b0 +
b0 *
b10000110011 )
b0 (
1'
b11 &
b100000 %
b0 $
0#
0"
0!
$end
#12
1#
1"
#25
0'
b1010 *
b1010 B
b1010 .
b1010 +
b1010 <
b10 1
b10 9
18
b1010 =
b1010 H
b1001 A
b1010 E
b10011 6
b101000000000010010010011 )
b101000000000010010010011 0
b101000000000010010010011 :
b101000000000010010010011 G
b1000 4
b1000 ?
b100 (
b100 5
b100 ;
b100 @
b1 $
1!
#50
0!
#75
b1101 *
b1101 B
b1101 .
b1101 +
b1101 <
b1101 =
b1101 H
b1010 A
b1101 E
b110100000000010100010011 )
b110100000000010100010011 0
b110100000000010100010011 :
b110100000000010100010011 G
b1100 4
b1100 ?
b1000 (
b1000 5
b1000 ;
b1000 @
b10 $
1!
#100
0!
#125
b11 -
b11 /
b11 2
b1010 +
b1010 <
b1100100 *
b1100100 B
b1100100 .
b1 1
b1 9
08
b101001 =
b101001 H
b1011 A
b1010 >
b1010 F
b1001 E
b1010 ,
b1010 D
b1001 C
b110011 6
b10100101001000010110110011 )
b10100101001000010110110011 0
b10100101001000010110110011 :
b10100101001000010110110011 G
b10000 4
b10000 ?
b1100 (
b1100 5
b1100 ;
b1100 @
b11 $
1!
#150
0!
#175
b1 +
b1 <
b10 1
b10 9
18
b1011 *
b1011 B
b1011 .
b1 =
b1 H
b1001 A
b0 >
b0 F
b1 E
b10011 6
b1 -
b1 /
b1 2
b101001000010010010011 )
b101001000010010010011 0
b101001000010010010011 :
b101001000010010010011 G
b10100 4
b10100 ?
b10000 (
b10000 5
b10000 ;
b10000 @
b100 $
1!
#200
0!
#225
b10 -
b10 /
b10 2
b1011 +
b1011 <
b1 1
b1 9
08
b10000001001 =
b10000001001 H
b1010 A
b1011 >
b1011 F
b1001 E
b1010 C
b110011 6
b1000000100101010000010100110011 )
b1000000100101010000010100110011 0
b1000000100101010000010100110011 :
b1000000100101010000010100110011 G
b10 *
b10 B
b10 .
b11000 4
b11000 ?
b10100 (
b10100 5
b10100 ;
b10100 @
b1101 ,
b1101 D
b101 $
1!
#250
0!
#275
b10 +
b10 <
b1010 =
b1010 H
b1011 A
b10 >
b10 F
b1010 E
b1001 C
b100 -
b100 /
b100 2
b101001001111010110110011 )
b101001001111010110110011 0
b101001001111010110110011 :
b101001001111010110110011 G
b10 *
b10 B
b10 .
b11100 4
b11100 ?
b11000 (
b11000 5
b11000 ;
b11000 @
b1011 ,
b1011 D
b110 $
1!
#300
0!
#325
b1011 =
b1011 H
b1100 A
b1011 E
b10 ,
b10 D
b1010 C
b101 -
b101 /
b101 2
b101101010110011000110011 )
b101101010110011000110011 0
b101101010110011000110011 :
b101101010110011000110011 G
b100000 4
b100000 ?
b11100 (
b11100 5
b11100 ;
b11100 @
b111 $
1!
#350
0!
#375
1'
b0 *
b0 B
b0 .
b0 +
b0 <
b10 1
b10 9
18
b0 =
b0 H
b0 A
b0 >
b0 F
b0 E
b0 ,
b0 D
b0 C
b0 6
b1 -
b1 /
b1 2
b0 )
b0 0
b0 :
b0 G
b100100 4
b100100 ?
b100000 (
b100000 5
b100000 ;
b100000 @
b1000 $
1!
#400
0!
#425
b101000 4
b101000 ?
b100100 (
b100100 5
b100100 ;
b100100 @
b1001 $
1!
#450
0!
#475
b101100 4
b101100 ?
b101000 (
b101000 5
b101000 ;
b101000 @
b1010 $
1!
#500
0!
#525
b110000 4
b110000 ?
b101100 (
b101100 5
b101100 ;
b101100 @
b1011 $
1!
#550
0!
#575
b110100 4
b110100 ?
b110000 (
b110000 5
b110000 ;
b110000 @
b1100 $
1!
#600
0!
#625
b111000 4
b111000 ?
b110100 (
b110100 5
b110100 ;
b110100 @
b1101 $
1!
#650
0!
#675
b111100 4
b111100 ?
b111000 (
b111000 5
b111000 ;
b111000 @
b1110 $
1!
#700
0!
#725
b1000000 4
b1000000 ?
b111100 (
b111100 5
b111100 ;
b111100 @
b1111 $
1!
#750
0!
#775
b1000100 4
b1000100 ?
b1000000 (
b1000000 5
b1000000 ;
b1000000 @
b10000 $
1!
#800
0!
#825
b1001000 4
b1001000 ?
b1000100 (
b1000100 5
b1000100 ;
b1000100 @
b10001 $
1!
#850
0!
#875
b1001100 4
b1001100 ?
b1001000 (
b1001000 5
b1001000 ;
b1001000 @
b10010 $
1!
#900
0!
#925
b1010000 4
b1010000 ?
b1001100 (
b1001100 5
b1001100 ;
b1001100 @
b10011 $
1!
#950
0!
#975
b1010100 4
b1010100 ?
b1010000 (
b1010000 5
b1010000 ;
b1010000 @
b10100 $
1!
#1000
0!
#1025
b1011000 4
b1011000 ?
b1010100 (
b1010100 5
b1010100 ;
b1010100 @
b10101 $
1!
#1050
0!
#1075
b1011100 4
b1011100 ?
b1011000 (
b1011000 5
b1011000 ;
b1011000 @
b10110 $
1!
#1100
0!
#1125
b1100000 4
b1100000 ?
b1011100 (
b1011100 5
b1011100 ;
b1011100 @
b10111 $
1!
#1150
0!
#1175
b1100100 4
b1100100 ?
b1100000 (
b1100000 5
b1100000 ;
b1100000 @
b11000 $
1!
#1200
0!
#1225
b1101000 4
b1101000 ?
b1100100 (
b1100100 5
b1100100 ;
b1100100 @
b11001 $
1!
#1250
0!
#1275
b1101100 4
b1101100 ?
b1101000 (
b1101000 5
b1101000 ;
b1101000 @
b11010 $
1!
#1300
0!
#1325
b1110000 4
b1110000 ?
b1101100 (
b1101100 5
b1101100 ;
b1101100 @
b11011 $
1!
#1350
0!
#1375
b1110100 4
b1110100 ?
b1110000 (
b1110000 5
b1110000 ;
b1110000 @
b11100 $
1!
#1400
0!
#1425
b1111000 4
b1111000 ?
b1110100 (
b1110100 5
b1110100 ;
b1110100 @
b11101 $
1!
#1450
0!
#1475
b1111100 4
b1111100 ?
b1111000 (
b1111000 5
b1111000 ;
b1111000 @
b11110 $
1!
#1500
0!
#1525
b10000000 4
b10000000 ?
b1111100 (
b1111100 5
b1111100 ;
b1111100 @
1!
